@use "../tokens" as *;
@use "../functions";

html {
  // Font size
  $min-bp: functions.get($tokens, "breakpoints", "mobile-min");
  $max-bp: functions.get($tokens, "breakpoints", "desktop");
  $font-sizes: functions.get($tokens, "size", "font");
  // Fluid font size variables, for browsers that support clamp
  @supports (font-size: clamp(1rem, 1vw, 1rem)) {
    @each $step, $sizes in $font-sizes {
      $min-px: functions.get($sizes, "min");
      $max-px: functions.get($sizes, "max");
      $font-size: functions.clamped($min-px, $max-px, $min-bp, $max-bp);
      $token-name: functions.get-token-name("size", "font", $step);
      --#{$token-name}: #{$font-size};
    }
  }
  // Fallback variables for browsers that don't support clamp
  @supports not (font-size: clamp(1rem, 1vw, 1rem)) {
    // Mobile ("min")
    @each $step, $sizes in $font-sizes {
      $font-size: functions.to-rems(functions.get($sizes, "min"));
      $token-name: functions.get-token-name("size", "font", $step);
      --#{$token-name}: #{$font-size};
    }
    // Desktop ("max")
    @media screen and (min-width: #{$max-bp}) {
      @each $step, $sizes in $font-sizes {
        $font-size: functions.to-rems(functions.get($sizes, "max"));
        $token-name: functions.get-token-name("size", "font", $step);
        --#{$token-name}: #{$font-size};
      }
    }
  }

  // Line height
  $leading-steps: functions.get($tokens, "size", "leading");
  @each $step, $value in $leading-steps {
    $token-name: functions.get-token-name("size", "leading", $step);
    --#{$token-name}: #{$value};
  }

  // Letter spacing
  $tracking-steps: functions.get($tokens, "size", "tracking");
  @each $step, $value in $tracking-steps {
    $token-name: functions.get-token-name("size", "tracking", $step);
    --#{$token-name}: #{$value};
  }

  // Spacing
  $spacing-steps: functions.get($tokens, "size", "spacing");
  @each $step, $value in $spacing-steps {
    $name: functions.get-token-name("size", "spacing", $step);
    --#{$name}: #{$value};
  }

  // Relative
  $relative-steps: functions.get($tokens, "size", "relative");
  @each $step, $value in $relative-steps {
    $name: functions.get-token-name("size", "relative", $step);
    --#{$name}: #{$value};
  }
}
