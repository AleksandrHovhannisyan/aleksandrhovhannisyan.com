@import '../mixins';

.project {
  &-grid {
    --gap: 4.8rem;
    display: flex;
    flex-wrap: wrap;
    gap: var(--gap);
  }

  &-wrapper {
    display: flex;
    flex: 1 1 calc(50% - var(--gap));
    min-width: 27rem;

    // Prevents the dreaded "doom flicker": https://www.joshwcomeau.com/animation/css-transitions/#doom-flicker
    &:is(:hover, :focus-within) {
      .project {
        box-shadow: var(--card-box-shadow-focus);
        transform: var(--card-offset-y-focus);
      }

      .project-link {
        opacity: 0.92;
      }
    }
  }

  & {
    display: grid;
    grid-template-rows: max-content 1fr max-content;
    grid-template-columns: 1fr;
    row-gap: calc(var(--card-padding) / 2);
  }

  &-header {
    display: flex;
    justify-content: space-between;
  }

  &-name-wrapper {
    display: grid;
    grid-auto-flow: column;
    column-gap: 0.4rem;
  }

  &-name {
    color: var(--color-text-emphasis);
    @include font($size: 'base');
  }

  &-rating {
    display: grid;
    grid-auto-flow: column;
    column-gap: 0.4rem;
    align-items: center;
    @include font($size: 'sm');
  }

  &-technologies {
    display: flex;
    flex-wrap: wrap;
    gap: 0.8rem;
  }

  &-technology {
    border-radius: 0.2rem;
    padding: 0.4rem 1.2rem;
    @include font($size: 'sm');
  }

  &-link {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    opacity: 0;
    border-radius: inherit;
    color: var(--color-text-emphasis);
    background-color: var(--card-bg-color);
    @include transition(opacity);
    @include font($family: 'main', $weight: 'bold', $size: 'md');
  }
}

.github-cta {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  &-heading {
    @include font($size: 'base');
  }

  &-subheading {
    margin-bottom: 1.6rem;
  }

  a {
    height: 4.8rem;
    width: 4.8rem;
    color: var(--color-text-normal);
  }

  svg {
    width: inherit;
    height: inherit;
    fill: currentColor;
  }
}
