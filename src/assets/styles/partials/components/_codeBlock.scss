@import '../mixins';

.code-header {
  height: 0;
  z-index: 2;
  position: relative;

  // Code blocks with a file name need a bit of top padding
  &.with-file-name + pre[class*='language-'] {
    padding-top: 7.6rem;
  }
}

.code-file-name {
  position: absolute;
  top: 0;
  left: 0;
  display: grid;
  grid-auto-flow: column;
  column-gap: 0.4rem;
  color: var(--color-code-text);
  word-break: break-all;
  padding: 2.4rem 2.4rem 0 2.4rem;
  border-radius: 0.8rem 0.8rem 0 0;
  background-color: var(--color-code-background);
  @include font($family: 'main', $weight: 'regular', $size: 'sm');

  &::before {
    content: 'üìÇ';
  }
}

.copy-code-button {
  position: absolute;
  right: 2.4rem;
  top: 2.4rem;
  display: none;
  color: var(--color-code-text);
  background-color: var(--color-code-overlay-1);
  padding: 0.6rem 1.2rem;
  border-radius: 0.4rem;

  &::before {
    content: 'Copy üìã';
  }

  @include tablet {
    display: block;
  }

  &:is(.copied, :hover) {
    color: black;
    background-color: var(--color-code-overlay-2);
  }

  &.copied {
    &::before {
      content: 'Copied! ‚úîÔ∏è';
    }
  }
}

/* VS Code Dark Plus theme: https://github.com/PrismJS/prism-themes/blob/master/themes/prism-vsc-dark-plus.css */

pre[class*='language-'] {
  background: var(--color-code-background);
  box-shadow: var(--code-block-box-shadow);
  padding: 3.2rem;
  border-radius: 0.8rem;
  color: var(--color-code-text);
  text-align: start;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  tab-size: 2;
  overflow-x: auto;

  .namespace {
    opacity: 0.7;
  }

  &::selection,
  & *::selection {
    text-shadow: none;
    color: unset;
    background: var(--color-code-selection);
  }
}

.token {
  &:is(.doctype, .doctype-tag) {
    .name {
      color: var(--color-code-attribute);
    }
  }

  &.comment {
    margin: 0;
  }

  &:is(.comment, .prolog) {
    color: var(--color-code-comment);
  }

  &.number {
    color: var(--color-code-constant);
  }

  &.script {
    color: var(--color-code-text);
  }

  &:is(.keyword, .tag, .boolean, .constant, .inserted, .operator.arrow, .key.atrule, .rule, .keyword.module, .keyword.control-flow, .entity, .important, .punctuation.interpolation-punctuation, .doctype, .doctype-tag, .directive-hash),
  &.atrule .url {
    color: var(--color-code-keyword);
  }

  &:is(.selector, .string, .char, .builtin, .deleted, .regex, .attr-value),
  &.attr-value &.punctuation {
    color: var(--color-code-string);
  }

  &:is(.punctuation, .operator, .entity, .function),
  &.atrule &.url &.punctuation,
  &.attr-value &.punctuation.attr-equals,
  &.function &.maybe-class-name {
    color: var(--color-code-text);
  }

  &:is(.attr-name, .constant, .console, .property, .variable),
  &.imports &.maybe-class-name,
  &.exports &.maybe-class-name {
    color: var(--color-code-attribute);
  }

  &.tag &.punctuation,
  &.cdata {
    color: var(--color-code-punctuation);
  }

  &.italic {
    font-style: italic;
  }
}

/* Language Specific */

pre[class*='language-css'],
pre[class*='language-scss'],
pre[class*='language-sass'] {
  .token.selector {
    color: var(--color-code-selector);
  }
}

pre[class*='language-bash'] {
  .token:not(.comment) {
    color: var(--color-code-text) !important;
  }
}

.language-html .token.punctuation {
  color: var(--color-code-punctuation);
}

/* Line highlighting */

pre[data-line] {
  position: relative;
}

.highlight-line,
.highlight-line-active {
  background: var(--color-code-selection);
}
