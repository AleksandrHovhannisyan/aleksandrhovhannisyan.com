@import 'settings';

@mixin transition($what: all, $duration: $transition-duration) {
    transition: ease $what $duration;
}

@mixin headings {
    h1, h2, h3, h4, h5, h6 {
        @content;
    }
}

@mixin underlined-link($color: var(--link-color)) {
    position: relative;
    text-decoration: none;
    border: none;
    @include transition;

    &::after {
        content: '';
        height: 3px;
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 0%;
        background-color: $color;
        @include transition;
    }

    &:hover::after, &:focus::after {
        width: 100%; 
        left: 0;
    }
}

@mixin solid-button($bgColor, $textColor) {
    background-color: $bgColor;
    color: $textColor;
    border: 3px solid $bgColor;

    &:focus, &:hover {
        background-color: var(--button-bg-hover-color);
        border: 3px solid var(--button-bg-hover-color);
        outline: none;
    }
}

@mixin hollow-button($bgColor, $textColor) {
    background-color: $bgColor;
    color: $textColor;
    border: 3px solid $textColor;
    box-shadow: 0 0 0 0 $textColor;

    &:focus, &:hover {
        box-shadow: 0 0 0 2px $textColor;
        outline: none;
    }
}

@mixin themed($attribute, $light, $dark) {
    #{$attribute}: $light;

    .dark & {
        #{$attribute}: $dark;
    }
}

@mixin fixedColor($color) {
    &, &::selection {
        color: $color;
    }
}

@mixin centered($marginMin: 1.2rem, $contentMax: $page-max-width) {
    display: grid;
    grid-template-columns: minmax($marginMin, 1fr) minmax(0, $contentMax) minmax($marginMin, 1fr);
}
