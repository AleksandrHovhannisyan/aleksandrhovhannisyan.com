/* ============================================

   General top-level styling

   ============================================
*/

* {
    box-sizing: border-box;
}

:root {
    --main-bg-color: white;
    --highlight-bg-color: rgb(247, 199, 207);

    --nav-bg-color: rgb(44, 44, 44);
    --nav-text-color: rgb(179, 177, 177);
    --nav-min-height: 50px;

    --text-color-normal: rgb(83, 79, 79);
    --text-color-emphasis: black;
    --link-color: rgb(39, 83, 133);

    --button-bg-color: rgb(39, 83, 133);
    --button-bg-hover-color: rgb(83, 129, 182);
    --button-text-color: white;
    --button-text-hover-color: white;

    --skill-hover-bg-color: whitesmoke;
    
    --project-card-bg-color: rgb(253, 253, 253);
    --project-card-shadow: 0px 2px 10px rgba(0,0,0,0.25), 0 6px 6px rgba(0,0,0,0.2);
    --project-card-shadow-hover: 0px 8px 20px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.2);
    --project-card-margin: 30px;
    --repo-topic-bg-color: #e7e7e7;

    --form-bg-color: rgb(255, 255, 255);
    --form-input-margins: 10px;
    --form-max-width: 475px;

    --page-max-width: 900px;
    --global-transition-duration: 0.5s;
}

.night {
    --main-bg-color: rgb(44, 44, 44);
    --highlight-bg-color: rgb(124, 120, 99);

    --nav-bg-color: rgb(10, 10, 10);

    --text-color-normal: rgb(168, 159, 145);
    --text-color-emphasis: rgb(221, 207, 182);
    --link-color: rgb(175, 157, 123);
    
    --button-bg-color: rgb(85, 79, 67);
    --button-bg-hover-color: rgb(116, 110, 99);
    --button-text-color: var(--text-color-emphasis);
    --button-text-hover-color: rgb(24, 24, 24);
 
    --project-card-bg-color: rgb(54, 54, 54);
    --repo-topic-bg-color: #222222;

    --skill-hover-bg-color: rgb(66, 66, 66);
    --form-bg-color: var(--skill-hover-bg-color);
}

::selection {
    background-color: var(--highlight-bg-color);
    color: var(--text-color-emphasis);
}

#about-me, #projects, #skills, #education, #contact {    
    /* So the fixed navbar doesn't cover up any content we scroll to */
    margin-top: calc((var(--nav-min-height) + 20px) * -1);
    padding-top: calc(var(--nav-min-height) + 20px);
}

#intro, #about-me, #projects, #skills, #education {
    margin-bottom: 120px;
}

body {
    font-family: Nunito, sans-serif;
    color: var(--text-color-normal);
    background-color: var(--main-bg-color);
    transition: background-color var(--global-transition-duration);
    
    max-width: var(--page-max-width);
    margin-left: auto;
    margin-right: auto;
}

i, h1, h2, h3, h4, h5, h6, strong, em {
    color: var(--text-color-emphasis);
    transition: var(--global-transition-duration);
}

.collapsible-content h4 {
    margin-left: 10px;
    font-weight: normal;
    color: var(--text-color-normal);
}

h1 {
    font-size: 2em;
    margin-block-start: 0.67em;
    margin-block-end: 0.67em;
}

h1, h2 {
    margin-top: 0;
}

a {
    color: var(--link-color);
    transition: var(--global-transition-duration);
}

p {
    color: var(--text-color-normal);
    transition: var(--global-transition-duration);
}

/* Links an entire parent container, but the parent must be set to relative position */
.container-link {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    text-decoration: none;
    z-index: 1;
}

/* Custom headings with heading text and a nested image */

.heading, .heading * {
    vertical-align: middle;
}

.heading img {
    margin-left: 5px;
    width: 1.1em;
}

.centered-content {
    margin: auto;
    padding: 0 1.5rem;
}

/* ============================================

   Buttons and collapsibles grouped here because
   they share many of the same styles and don't
   necessarily belong to just X section of the page

   ============================================
*/

/* Note: this is an anchor with a class of button */
.button {
    width: 100%;
    height: 40px;
    line-height: 40px;
    text-align: center;
    display: block;
    
    margin-bottom: 15px;
    margin-right: 15px;
    border-radius: 5px;
    
    font-size: 1em;
    font-weight: bold;
    text-decoration: none;
}

.button * {
    transition: var(--global-transition-duration);
}

.collapsible {
    margin-top: 20px;

    font-family: Nunito, sans-serif;
    font-size: 1em;
    
    border: none;
    outline: none;
    width: 100%;
}

.collapsible-header {
    display: flex;
    flex-direction: row;
    padding: 10px;
}

.collapsible-header * {
    transition: var(--global-transition-duration);
    align-self: center;
}

.collapsible-header i {
    margin-left: 10px;
    margin-right: 20px;
    font-size: 1em;
}

.button, .collapsible-header {
    cursor: pointer;
    border: none;
    background-color: var(--button-bg-color);
    transition: var(--global-transition-duration);
}

.button, .button *, .collapsible-header * {
    color: var(--button-text-color);
}

.button:hover, .collapsible-header:hover {
    background-color: var(--button-bg-hover-color);
}

/* To get rid of Firefox's dotted lines when these are clicked */
.button::-moz-focus-inner, .collapsible::-moz-focus-inner {
    border: 0;
}

.button:hover, .button:hover *, .collapsible-header:hover * {
    color: var(--button-text-hover-color);
}

button:focus {
    outline: none;
}

@media only screen and (min-width: 400px) {
    
    .main-buttons {
        display: flex;
    }

    .button {
        max-width: 200px; 
    }
}


/* ============================================

   Navigation (+ color theme switch)

   ============================================
*/

#topnav .nav-container {
    max-width: var(--page-max-width);
    height: var(--nav-min-height);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#topnav {
    width: 100%;
    min-height: var(--nav-min-height);
    position: fixed;
    left: 0;
    right: 100%;
    top: 0;
    background-color: var(--nav-bg-color);
    box-shadow: 0px 0px 10px 1px var(--nav-bg-color);
    transition: var(--global-transition-duration);

    /* This is to ensure that it always appears above everything. */
    z-index: 100;
}

#topnav * {
    color: var(--nav-text-color);
}

.nav-links {
    list-style-type: none;

    padding: 0;
    margin-left: 0;
    margin-right: 0;

    max-height: 0px;

    /* Otherwise, the link text will be visible (will overflow its container) when max-height is 0px */
    overflow: hidden;

    background-color: var(--nav-bg-color);
    color: var(--nav-text-color);
    transition: var(--global-transition-duration);
    
    /* Mobile menu dropdown takes up 100% of the viewport width */
    display: block;
    position: absolute;
    left: 0;
    right: 0;
    top: 20px;
    font-size: 1.1em;
}

.nav-links li {
    text-align: center;
    margin: 25px auto;
}

.nav-links a {
    text-decoration: none;
    vertical-align: middle;
    transition: var(--global-transition-duration);
}

#topnav .nav-links a:hover {
    text-decoration: underline;
    color: white;
}

@media only screen and (min-width: 825px) {

    .nav-links {
        /* Note 1: I'm using !important here only as a last resort to cover an edge case. Suppose
        you open the navbar on a small screen (< 820 px) and then close it. Per the JavaScript,
        the inline style for .nav-links will be set to 'max-height: 0px' when the menu cloes. If we then switch
        to a wider view (e.g., by flipping the device to horizontal orientation), the inline style of
        'max-height: 0px' will end up overriding the style below, effectively making the navbar
        links invisible. !important allows us to override the inline style set by the script. */

        /* Note 2: This is admittedly a bit hacky, but it will suffice. The first max-height is for MS Edge and IE 11,
        which do not yet support intrinsic & extrinsic sizing (and will thus reject the second max-height). However, all other 
        browsers that do support max-content will override the first style and instead apply the second one. */
        max-height: 100px !important;
        max-height: max-content !important;
        
        margin: 0;
        position: static;
        
        /* Show the links on a single row on the navbar */
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
        align-items: center;
    }

    .nav-links li {
        margin: 0;
    }

    .nav-links a {
        margin-left: 40px;
    }

   .navbar-hamburger {
       display: none;
    }
}

.navbar-hamburger {
    font-size: 1.5em;
}

#theme-switch-container {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
}

#theme-switch {
    position: relative;
    
    --switch-width: 40px;
    width: var(--switch-width);
    height: 20px;
    margin-right: 5px;
    align-self: center;

    background-color: var(--nav-bg-color);
    --switch-border-thickness: 3px;
    border: var(--switch-border-thickness) solid var(--nav-text-color);
    border-radius: 100px;
    
    cursor: pointer;
    transition: var(--global-transition-duration);
}

#theme-switch::before {
    content: "";

    --orb-distance-from-edge: 2px;
    margin-left: var(--orb-distance-from-edge);

    --switch-orb-height: 10px;
    --switch-orb-width: 12px;
    width: var(--switch-orb-width);
    height: var(--switch-orb-height);

    position: absolute;
    /* We want to be halfway from the top, but we have to account for
    our own height to get the 'true' center position */
    top: calc(50% - var(--switch-orb-height) / 2);
    
    background-color: var(--nav-text-color);
    border-radius: 50%;
    transition: var(--global-transition-duration);
}

.night #theme-switch::before {
    /* A monstrous calculation, but at least it's more maintainable than hardcoding pixels and trying to get them right.
    One downside: this breaks the theme-switch transition in Edge due to an unresolved "bug" with the browser. See here:
    https://codepen.io/danwilson/details/zwqvOK/ and https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/105834/ */
    margin-left: calc(var(--switch-width) - 2 * var(--switch-border-thickness) - var(--switch-orb-width) - var(--orb-distance-from-edge));
}

#theme-label {
    align-self: center;
}

/* ============================================

   Page header (intro, about me)

   ============================================
*/

#intro {
    margin-top: 130px;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

#intro #lede {
    margin-bottom: 15px;
}

#profile-photo {
    height: 150px;
    width: 150px;
    border-radius: 50%;
    box-shadow: 0px 0px 12px 2px var(--nav-bg-color);
    margin-left: auto;
    margin-right: auto;
}

#intro *, #about-me * {
    transition: var(--global-transition-duration);
}

#page-header {
    margin-top: 100px;
}

#main-cta {
    margin-bottom: 30px;
    font-size: 1.1em;
}

/* ============================================

   Projects/portfolio cards 

   ============================================
*/

#projects {
    display: grid;
    column-gap: 50px;
    row-gap: 50px;
    /* Fill up space as it's made available, with each card being a minimum of 250px */
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
}

/* Don't treat the project header as an item/card, keep it on the top row */
#projects h2 {
    grid-row: 1;
    grid-column: 1 / -1;
    transition: var(--global-transition-duration);
}

.project {
    /* To ensure that .project-link (see below) is absolute relative to us and not the page */
    position: relative;
    display: grid;
    grid-template-columns: 1;
    /* Header, description, footer, respectively */
    grid-template-rows: max-content 1fr max-content;
    row-gap: 20px;

    transition: background-color var(--global-transition-duration), box-shadow var(--global-transition-duration);
}

/* All project cards except the placeholder get a background and box shadow */
.project:not(#project-placeholder) {
    background-color: var(--project-card-bg-color);
    box-shadow: var(--project-card-shadow);
    border-radius: 5px;
}

/* Apply margins to all project headers except the placeholder's */
.project:not(#project-placeholder) header {
    margin-top: var(--project-card-margin);
    margin-bottom: 0px;
    margin-left: var(--project-card-margin);
    margin-right: var(--project-card-margin);

    display: grid;
    grid-template-areas: "heading heading rating";
}

.project-icon * {
    width: 24px;
    margin-right: 3px;
    display: inline-block;
    vertical-align: middle;
}

.project h4 {
    margin: 0px;
    align-self: center;
    grid-area: heading;
    transition: var(--global-transition-duration);
}

.project-rating {
    font-size: 0.85em;
    justify-self: center;
    align-self: center;
    grid-area: rating;
    transition: var(--global-transition-duration);
}

.project .description {
    margin-top: 0px;
    margin-bottom: 0px;
    margin-left: var(--project-card-margin);
    margin-right: var(--project-card-margin);
    transition: var(--global-transition-duration);
}

/* Displayed when a user hovers over a project card */
.hover-content {
    font-size: 1.2em;
    /* Again, note that .project has position: relative */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    /* Center the content for the hover layer */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    /* Opacity = 0 means it's hidden by default */
    opacity: 0;
    border-radius: 5px;
    background-color: var(--skill-hover-bg-color);
    transition: var(--global-transition-duration);
}

/* Make it clearer which card is hovered over */
.project:hover:not(#project-placeholder) {
    box-shadow: var(--project-card-shadow-hover);
}

/* Transition for the hover content changes its opacity */
.project:hover .hover-content {
    cursor: pointer;
    opacity: 0.92;
}

.fa-external-link-alt {
    margin-top: 20px;
}

.project-name {
    color: var(--link-color);
    text-decoration: none;
}

.topics {
    display: flex;
    flex-wrap: wrap;
    grid-row: 3;

    margin-top: 0px;
    margin-bottom: var(--project-card-margin);
    margin-left: var(--project-card-margin);
    margin-right: var(--project-card-margin);
    transition: background-color var(--global-transition-duration);
}

.topics p {
    font-size: 0.9em;
    padding: 5px;
    margin-top: 10px;
    margin-bottom: 0px;
    margin-right: 10px;

    border-radius: 2px;
    background-color: var(--repo-topic-bg-color);
    box-shadow: 0 0 2px black;
    transition: var(--global-transition-duration);
}

#project-placeholder {
    display: flex;
    flex-direction: column;
    text-align: center;
    justify-content: center;
}

#project-placeholder p {
    transition: var(--global-transition-duration);
}

#project-placeholder .github-cta {
    display: inline-block;
    
    font-size: 3em;
    margin-top: 20px;

    text-decoration: none;
    color: black;
    transition: var(--global-transition-duration);
    
    border-radius: 50%;    
    width: 60px;
    height: 60px;
}

/* ============================================

   Skills (responsive columns)

   ============================================
*/

#skills {
    display: grid;
    column-gap: 100px;
    row-gap: 20px;
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
}

#skills h2 {
    grid-row: 1;
    grid-column: 1 / -1;
}

.skill-category h4 {
    margin-bottom: 20px;
}

.skill-item {
    margin-top: 10px;
    display: grid;
    column-gap: 10px;
    grid-template-columns: 1fr 1fr;
}

.skill-item:hover {
    background-color: var(--skill-hover-bg-color);
}

.skill-name {
    grid-column: 1;
    transition: var(--global-transition-duration);
}

.skill-rating {
    grid-column: 2;
    display: inline;
    text-align: right;
}

.fa-star.filled {
    color: var(--button-bg-color);
}

.fa-star.empty {
    color: var(--nav-text-color);
}

.night .fa-star.filled {
    color: rgb(145, 145, 145);
}

.night .fa-star.empty {
    color: var(--button-bg-color);
}

/* ============================================

   Education (institutions, coursework, etc.)

   ============================================
*/

.institution {
    margin-top: 40px;
}

.collapsible-content {
    display: grid;
    /* Mobile first: only one column. Changes to two columns on bigger screens. See media query below. */
    grid-template-columns: 1fr;

    /* Will be set to a sufficiently large max-height by corresponding click handler for .collapsible */
    max-height: 0px;
    overflow: hidden;

    --collapsible-content-border-width: 3px;
    border: solid var(--collapsible-content-border-width) var(--button-bg-color);
    transition: var(--global-transition-duration);
    border-top: none;
}

/* Prefixing all collapsible-content stuff here with .institution to keep things
more generically styled for .collapsible-content on its own, since collapsibles can, in theory,
be used anywhere on the page. */

.institution .collapsible-content .awards {
    /* Only matters on mobile, where the awards are stacked underneath courses */
    border-top: solid var(--collapsible-content-border-width) var(--button-bg-color);
    transition: border var(--global-transition-duration);
}

.institution .collapsible-content ul {
    padding-right: 10px;
}

.institution .collapsible-content p {
    padding-left: 10px;
}

/* Line up courses and awards side by side on larger screens */
@media only screen and (min-width: 800px) {

    .institution .collapsible-content {
        grid-template-rows: 1fr;
        grid-template-columns: auto auto;
    }

    .institution .collapsible-content .awards {
        /* Now that it's lined up to the right of the courses, there's no need for a top border */
        border-top: none;
        /* But there is for a left border */
        border-left: solid var(--collapsible-content-border-width) var(--button-bg-color);
        transition: border var(--global-transition-duration);
    }
}

/* ============================================

   Contact form

   ============================================
*/

#contact {
    display: grid;
    grid-template-areas: "form"
                         "socials";
    grid-template-rows: auto;
    column-gap: 120px;
}

#contact-form {
    grid-area: form;
}

#social-networks {
    grid-area: socials;
}

@media only screen and (min-width: 700px) {
    #contact {
        grid-template-areas: "form form form socials";
    }
}

form {
    margin-bottom: 50px;
    margin-top: 30px;
    max-width: var(--form-max-width);
}

form * {
    color: var(--text-color-normal);
    font-family: Nunito, sans-serif;
    font-size: 1em;
}

form input:not([class="button"]), form textarea {
    height: 30px;
    width: 100%;
    margin-bottom: 15px;
    padding: 10px;
    
    background-color: var(--form-bg-color);
    border: 0px solid;
    box-shadow: 0 0 3px 1px rgb(172, 172, 172);
    border-radius: 3px;
}

form input:not([class="button"]) {
    transition: background-color var(--global-transition-duration), box-shadow var(--global-transition-duration);
}

form label {
    margin-bottom: 5px;
    display: block;
}

form input:focus, form textarea:focus {
    outline: none;
    box-shadow: 0 0 5px 2px rgb(155, 155, 155);
}

form textarea {
    max-width: var(--form-max-width);
    min-height: 200px;
    transition: height 0s, background-color var(--global-transition-duration), box-shadow var(--global-transition-duration);
}

form .button {
    max-width: 100%;
    width: 100%;
    height: 45px;
}

/* Yum, honey */
input.honeypot {
    display: none;
}

/* ============================================

   Social networks

   ============================================
*/

#social-networks {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    grid-template-rows: min-content;
    grid-auto-rows: min-content;
    row-gap: 50px;
    column-gap: 30px;
    margin-bottom: 50px;
}

#social-networks h3 {
    grid-row: 1;
    grid-column: 1 / -1;
}

.social-network {
    /* Position relative because we have an absolutely 
    positioned .container-link as a child */
    position: relative;
    display: grid;
    grid-template-columns: 1fr 1fr;
}

.social-network:hover {
    cursor: pointer;
    background-color: var(--skill-hover-bg-color);
}

/* The social icon + its background icon, stacked on top of one another */
.social-network .fa-stack {
    display: flex;
}

.fa-stack i {
    align-self: center;
    justify-self: center;
}

/* Whatever icon is being used as the background one; we'll keep it invisible in
the light theme but transition its opacity in dark mode. */
.fa-stack-2x {
    opacity: 0;
    font-size: 1.5em;
    color: white;
}

/* The background icon will appear when we transition to the
dark theme; that way, the social icons will get a nice white fill in any
see-through parts (like the LinkedIn logo's "ln" text) and a thick border effect. */
.night .fa-stack-2x {
    opacity: 1;
}

.social-network .network-name {
    grid-column: 2;
    align-self: center;
    transition: var(--global-transition-duration);
}

#social-networks .fa-linkedin {
    color: #0077B5;
}

#social-networks .fa-github {
    color: black;
}

#social-networks .fa-stack-exchange {
    color: #195398;
}

#social-networks .fa-address-book {
    color: #37A000;
}

#page-footer {
    position: absolute;
    left: 0;
    height: 50px;
    width: 100%;
    background: var(--nav-bg-color);
    transition: var(--global-transition-duration);
    color: var(--nav-text-color);

    display: flex;
    justify-content: center;
    align-items: center;
}