@use "sass:math";
@use "./tokens" as *;
@use "./functions";
@use "./mixins";

body {
  background-color: functions.color("surface", "0");
  color: functions.color("text", "normal");
  accent-color: functions.color("accent", "0");
  overflow-wrap: break-word;
  -webkit-font-smoothing: antialiased;
  @include mixins.font($family: "body", $weight: "regular", $size: "base");
}

:is(code, kbd) {
  @include mixins.font($family: "mono", $weight: "regular");

  :is(strong, h1, h2, h3, h4, h5, h6) & {
    @include mixins.font($family: "mono", $weight: "bold");
  }
}

code:not([class^="language-"]), kbd {
  color: functions.color("text", "emphasis");
  background-color: light-dark(#{functions.color("surface", "1")}, #{functions.color("surface", "2")});
  border-radius: functions.size("spacing", "-3");
  padding: functions.size("relative", "-4") functions.size("relative", "-3");
}

kbd {
  outline: solid 1px functions.color("surface", "3");
  box-shadow: 0 1px 1px 0 functions.color("border", "0");
}

mark,
::selection {
  background-color: functions.color("accent", "0");
  color: functions.color("text", "inverted");
}

a {
  color: functions.color("accent", "0");
  text-decoration-color: functions.color("accent", "0");
  text-underline-offset: 0.15em;
  text-decoration-thickness: 0.08em;

  :is(h1, h2, h3, h4, h5, h6) & {
    color: inherit;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  color: functions.color("text", "emphasis");
  text-wrap: balance;
}

h1,
h2,
h3,
h4,
h5,
h6,
label,
th,
strong {
  @include mixins.font($family: "body", $weight: "bold");
}
