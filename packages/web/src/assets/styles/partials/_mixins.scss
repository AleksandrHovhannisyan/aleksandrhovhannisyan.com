@use 'sass:math';
@use 'sass:string';
@use 'sass:map';
@use 'sass:list';
@use './tokens' as *;
@use './functions';

@mixin screen-reader-only() {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  width: 1px;
  height: 1px;
  overflow: hidden;
  white-space: nowrap;
}

@mixin screen-reader-only-unset() {
  clip: auto;
  width: auto;
  height: auto;
  white-space: normal;
  overflow: visible;
}

// Inspiration: https://stackoverflow.com/a/49437769/5323344
@mixin transition($props...) {
  $result: ();
  @for $i from 1 through list.length($props) {
    $prop: list.nth($props, $i);
    $result: list.append($result, $prop);
    @if $i != list.length($props) {
      $result: list.append(
        $result,
        string.unquote(
          $string: ',',
        )
      );
    }
  }
  transition-timing-function: var(--transition-timing-function);
  transition-duration: var(--transition-duration);
  transition-property: $result;
}

@mixin headings {
  :is(h1, h2, h3, h4, h5, h6) {
    @content;
  }
}

@mixin font($size: null, $leading: null, $tracking: null, $family: null, $weight: null) {
  @if not $size and not $leading and not $family and not $weight {
    @error "You must specify at least one argument to the font mixin.";
  }
  // Font size and its related properties
  @if $size {
    font-size: functions.token('size', 'font', $size);
    // Line height
    @if not $leading {
      $leading-step: functions.get($tokens, 'size', 'font', $size, 'leading');
      @if $leading-step {
        line-height: functions.token('size', 'leading', $leading-step);
      }
    } @else {
      line-height: functions.token('size', 'leading', $leading);
    }
    // Tracking/letter spacing
    @if not $tracking {
      $tracking-step: functions.get($tokens, 'size', 'font', $size, 'tracking');
      @if $tracking-step {
        letter-spacing: functions.token('size', 'tracking', $tracking-step);
      }
    } @else {
      letter-spacing: functions.token('size', 'tracking', $tracking);
    }
  }
  // Setting family and weight together
  @if $family {
    font-family: var(--font-family-#{$family});
    font-weight: var(--font-weight-#{$family}-#{$weight});
  }
}

// Breakpoint mixins

@mixin breakpoint($name) {
  $bp: functions.get($tokens, 'breakpoints', $name);
  $bp: math.div($bp, 16px) * 1em;
  @media screen and (min-width: $bp) {
    @content;
  }
}

@mixin mobile {
  @include breakpoint('mobile') {
    @content;
  }
}

@mixin mobile-lg {
  @include breakpoint('mobile-lg') {
    @content;
  }
}

@mixin tablet-sm {
  @include breakpoint('tablet-sm') {
    @content;
  }
}

@mixin tablet {
  @include breakpoint('tablet') {
    @content;
  }
}

@mixin desktop {
  @include breakpoint('desktop') {
    @content;
  }
}

@mixin desktop-lg {
  @include breakpoint('desktop-lg') {
    @content;
  }
}
