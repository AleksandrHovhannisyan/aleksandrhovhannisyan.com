@layer COMPONENTS {
  /* Dialogs */
  [data-dialog-action='close'] {
    position: absolute;
    margin-inline-start: auto;
  }

  [data-dialog-action] {
    --color-surface-dialog-button: inherit;
    background-color: var(--color-surface-dialog-button);
    display: flex;
    align-items: center;
    margin: 0;
    padding: var(--size-relative--2);

    &:is(:focus-visible, :hover) {
      --color-surface-dialog-button: light-dark(var(--color-surface-1), var(--color-surface-2));
    }
  }

  .dialog {
    --color-surface-dialog: light-dark(var(--color-surface-0), var(--color-surface-1));
    margin: 0;
    border: none;
    padding: var(--size-spacing-11) var(--size-spacing-2);
    text-wrap: nowrap;
    background-color: var(--color-surface-dialog);
    scrollbar-width: thin;

    &[open] {
      display: flex;
      flex-direction: column;
    }

    & a {
      display: flex;
    }

    &::backdrop {
      pointer-events: none; /* so that outside-clicks are detected correctly */
      background-color: rgb(0 0 0 / 60%);
      backdrop-filter: blur(4px);
    }

    &:is(.left, .right) {
      min-block-size: 100dvb;
      min-inline-size: min(15rem, 100%);
    }

    &.left [data-dialog-action='close'] {
      inset-block-start: var(--size-spacing-0);
      inset-inline-start: var(--size-spacing-0);
    }

    &.right {
      inset-inline-start: 100%;
      transform: translateX(-100%);
    }

    &.right [data-dialog-action='close'] {
      inset-block-start: var(--size-spacing-0);
      inset-inline-end: var(--size-spacing-0);
    }
  }

  .dialog-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: auto;
  }

  /* Theme picker */
  .theme-picker {
    & fieldset {
      border: none;
    }

    & legend {
      font-variant: small-caps;
      letter-spacing: var(--size-tracking-md);
      font-weight: var(--font-weight-body-bold);
    }

    & label {
      display: block;
      font-weight: unset;
    }
  }

  /* Pills */
  .pill-group {
    display: flex;
    flex-wrap: wrap;
    gap: var(--size-spacing--2);
  }

  .pill {
    text-decoration: none;
    display: inline-flex;
    align-items: baseline;
    background-color: var(--color-surface-2);
    color: var(--color-text-emphasis);
    padding: var(--size-spacing--3) var(--size-spacing-0);
    font-family: var(--font-family-mono);
    font-weight: var(--font-weight-mono-regular);

    &[data-shape='round'] {
      border-radius: var(--size-spacing-8);
    }

    &[data-size='sm'] {
      padding: var(--size-spacing--3) var(--size-spacing--2);
      font-size: var(--size-font-sm);
    }
  }

  .pill-count {
    font-size: var(--size-font-xs);
  }

  a.pill:is(:focus-visible, :hover, [aria-current='page']) {
    background-color: var(--color-surface-3);
  }

  /* Posts */
  .post {
    counter-reset: footnotes;
    max-width: calc(700rem / 16);

    & img {
      margin-inline: auto;
    }
  }

  .post-title {
    margin-bottom: var(--size-spacing--1);
  }

  .post-date {
    color: var(--color-text-soft);
    margin-bottom: var(--size-spacing--3);
    font-size: var(--size-font-sm);

    & :is(dt, dd) {
      display: inline-block;
    }
  }

  .post-tag {
    padding: var(--size-spacing--3) var(--size-spacing--2);
    border-radius: var(--size-spacing--4);
  }

  /* Quotes */
  blockquote {
    font-style: italic;
    border-inline-start: var(--size-spacing--3) solid;
    padding: 0 var(--size-relative-2);

    & > .rhythm > :first-child::before {
      content: open-quote;
    }

    & > .rhythm > :last-child::after {
      content: close-quote;
    }
  }

  cite {
    font-style: normal;
    display: block;
    font-size: var(--size-font-sm);

    &::before {
      content: 'â€”';
      user-select: none;
    }
  }

  /* Styled asides */
  .aside {
    border: solid 1px var(--color-surface-3);
    border-inline-start: var(--size-spacing--3) solid;
    padding: var(--size-relative-0) var(--size-relative-2);
    background-color: var(--color-surface-1);

    & code {
      padding: 0;
      background-color: rgb(0 0 0 / 0%);
    }
  }

  /* Definitions */
  dfn {
    font-style: normal;
    font-weight: var(--font-weight-body-bold);
  }

  /* Expandable <details> */
  details {
    & summary,
    & .details-content {
      padding: var(--size-spacing-2) var(--size-spacing-3);
      border: 1px solid var(--color-border-0);
    }

    & summary {
      cursor: pointer;
      background-color: var(--color-surface-1);
    }

    & .details-content {
      border-top: none;
    }
  }

  /* Figures */
  figure {
    gap: var(--size-spacing--2);
    display: flex;
    flex-direction: column;
  }

  figcaption {
    text-align: center;
    max-width: 65ch;
    margin-inline: auto;
    font-size: var(--size-font-xs);
  }

  :is(caption, figcaption, cite) {
    color: var(--color-text-soft);
  }

  :is(caption, figcaption) {
    text-wrap: balance;
  }

  /* Card links that cover the whole card */
  .card-link::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  /* Post preview cards */
  .post-preview {
    border-radius: var(--size-spacing--3);
    background-color: var(--color-surface-1);
    padding: var(--size-relative-2);
    position: relative;

    &:has(.post-preview-link:focus-visible) {
      outline: solid 0.1875rem var(--color-accent-0);
    }
  }

  .post-preview-link {
    text-decoration-line: none;
    outline: none;
  }

  .post-preview-date {
    font-size: var(--size-font-sm);
  }

  .post-preview-date {
    color: var(--color-text-soft);
  }

  .post-preview-title {
    margin-top: var(--size-spacing--3);
    font-size: var(--size-font-lg);
    line-height: var(--size-leading-xs);
  }

  .post-preview-description {
    margin-top: var(--size-spacing--2);
    font-size: var(--size-font-base);

    /* Tighten line height due to short line length */
    line-height: var(--size-leading-sm);
  }

  .post-preview-tags {
    display: none;
  }

  .post-preview-tag {
    border-radius: var(--size-spacing--3);
  }

  @media (--size-breakpoint-tablet-sm) {
    .post-preview-title {
      line-height: var(--size-leading-2xs);
    }
  }

  @media (--size-breakpoint-desktop) {
    .post-preview-tags {
      display: flex;
      flex-wrap: wrap;
      gap: var(--size-spacing--2);
      margin-top: var(--size-spacing-2);
    }
  }

  /* Projects */
  .project {
    position: relative;
    gap: 0;
    border: solid 1px var(--color-border-0);

    &:focus-within {
      outline: solid 3px var(--color-accent-0);
      outline-offset: 3px;
    }

    & img {
      aspect-ratio: 16/9;
      object-fit: cover;
      object-position: center;
      filter: brightness(0.9);
    }

    &:is(:hover, :focus-within) img {
      filter: brightness(1);
    }

    & figcaption {
      background-color: black;
      padding: 1ch;
      margin: 0;
      color: white;
    }

    & figcaption a {
      text-decoration: none;
      outline: none;
      color: inherit;
    }
  }

  /* Lists */
  :where(ul, ol):not([class]),
  .list {
    padding-inline-start: 2ch;

    li {
      margin-top: 0.25lh;
    }

    & & {
      padding-inline-start: 3ch;
    }
  }

  .list-style-disc {
    list-style: disc;
  }

  /* Floats */
  .float {
    --spacing: var(--size-spacing--2);
    margin-block-end: var(--spacing);

    &.right {
      margin-inline-start: var(--spacing);
      float: right;
    }
  }

  /* Code blocks */
  .code-block {
    --size-code-padding: var(--size-spacing-4);
    --size-code-line-number-padding: var(--size-relative--3);
    --color-code-background: var(--color-surface-1);
    --color-code-header-background: var(--color-surface-2);
    --color-code-overlay-1: light-dark(var(--color-surface-3), var(--color-surface-3));
    --color-code-overlay-2: light-dark(var(--color-surface-4), var(--color-surface-4));

    /* Dark colors: https://github.com/PrismJS/prism-themes/blob/master/themes/prism-vsc-dark-plus.css */
    --color-code-selection: light-dark(hsl(244deg 28% 51% / 20%), hsl(210deg 100% 84% / 15%));
    --color-code-comment: light-dark(hsl(120deg 100% 21.8%), hsl(101deg 29% 47%));
    --color-code-text: light-dark(hsl(0deg 0% 0%), hsl(0deg 0% 90%));
    --color-code-keyword: light-dark(hsl(233deg 100% 38%), hsl(207deg 61% 59%));
    --color-code-number: light-dark(var(--color-code-comment), hsl(99deg 28% 73%));
    --color-code-attribute: light-dark(var(--color-code-text), hsl(201deg 98% 80%));
    --color-code-string: light-dark(hsl(8deg 100% 38%), hsl(17deg 47% 64%));
    --color-code-variable: var(--color-code-keyword);
    --color-code-tag: var(--color-code-keyword);
    --color-code-constant: var(--color-code-number);
    --color-code-punctuation: light-dark(var(--color-code-text), hsl(0deg 0% 54%));
    --color-code-selector: light-dark(var(--color-code-string), hsl(41deg 53% 67%));
    border-radius: var(--size-spacing--3);
    position: relative;

    & pre {
      --border-code: solid 1px var(--color-surface-3);
      color: var(--color-code-text);
      overflow-x: auto;
      white-space: pre;
      word-spacing: normal;
      word-break: normal;
      tab-size: 4;
      text-align: start;
      border: var(--border-code);
      border-radius: var(--size-spacing--3);
    }

    & code {
      display: block;
      width: fit-content;
      min-width: 100%;
      line-height: var(--size-leading-sm);
      padding: var(--size-code-padding);
      background-color: var(--color-code-background);
    }

    & .file-name,
    & .copy-code-button {
      position: absolute;
      inset-block-start: var(--size-code-padding);
    }

    & .file-name {
      display: flex;
      align-items: center;
      gap: 1ch;
      inset-inline-start: var(--size-code-padding);
      color: inherit;
      font-size: inherit;
      transform: translateY(-50%);
      font-family: var(--font-family-mono);
      font-weight: var(--font-weight-mono-bold);
    }

    & .copy-code-button {
      display: none;
      opacity: 0;
      inset-inline-end: var(--size-code-padding);
      color: var(--color-code-text);
      background-color: var(--color-code-overlay-1);
      padding: var(--size-spacing--3) var(--size-spacing--1);
      border-radius: var(--size-spacing--3);
      font-size: var(--size-font-sm);
      font-family: var(--font-family-mono);
      font-weight: var(--font-weight-mono-regular);
    }

    & .copy-code-button:is(.copied, :focus) {
      opacity: 1;
    }

    & .copy-code-button:is(.copied, :hover) {
      background-color: var(--color-code-overlay-2);
    }

    /* Code blocks with a caption should get a "fake" header. <figcaption> must be the first or
    last child of a <figure>, so I can't just wrap it in a div and style that (which would be easier). */
    &:has(.file-name) {
      /* We can fake the header with a background color */
      & pre {
        background-color: var(--color-code-header-background);
        padding-block-start: calc(2 * var(--size-code-padding));
      }

      /* Code should get the main padding */
      & code {
        padding: var(--size-code-padding);
        border-block-start: solid 1px var(--color-surface-3);
      }

      /* Center button on fake header */
      & .copy-code-button {
        transform: translateY(-50%);
      }
    }

    /* Non-plaintext code blocks with >= 10 lines should get line numbering */
    &:not([data-language='text'], [data-language='plaintext']) code:has(.line:nth-child(10)) {
      --size-code-line-number-offset: 4ch;
      padding-inline-start: calc(var(--size-code-padding) + var(--size-code-line-number-offset));

      & .line {
        counter-increment: line-number;
      }

      & .line::before {
        content: counter(line-number);
        position: absolute;
        inset-inline-start: 0;
        border-inline-start: var(--border-code);
        min-inline-size: var(--size-code-line-number-offset);
        text-align: end;
        padding-inline-end: 2ch;
        color: var(--color-text-soft);
        font-variant-numeric: tabular-nums;
        background-color: var(--color-code-background);
      }
    }

    & code:has(.line:nth-child(100)) {
      --size-code-line-number-offset: 5ch;
    }

    &:hover .copy-code-button {
      opacity: 1;
    }

    & .namespace {
      opacity: 0.7;
    }

    & code::selection,
    & code *::selection {
      text-shadow: none;
      color: unset;
      background: var(--color-code-selection);
    }

    .token {
      &:is(.doctype, .doctype-tag) {
        .name {
          color: var(--color-code-attribute);
        }
      }

      &.comment {
        margin: 0;
      }

      &:is(.comment, .prolog) {
        color: var(--color-code-comment);
      }

      &.number {
        color: var(--color-code-constant);
      }

      &.script {
        color: var(--color-code-text);
      }

      &.punctuation,
      &.cdata {
        color: var(--color-code-punctuation);
      }

      &:is(
        .keyword,
        .tag,
        .boolean,
        .constant,
        .url,
        .inserted,
        .operator.arrow,
        .key.atrule,
        .rule,
        .keyword.module,
        .keyword.control-flow,
        .entity,
        .important,
        .punctuation.interpolation-punctuation,
        .doctype,
        .doctype-tag,
        .directive-hash
      ),
      &.atrule .url {
        color: var(--color-code-keyword);
      }

      &:is(.selector, .string, .char, .builtin, .deleted, .regex, .attr-value),
      &.attr-value &.punctuation,
      &.url .content {
        color: var(--color-code-string);
      }

      &:is(.operator, .entity, .function),
      &.atrule &.url &.punctuation,
      &.attr-value &.punctuation.attr-equals,
      &.function &.maybe-class-name {
        color: var(--color-code-text);
      }

      &:is(.attr-name, .constant, .console, .property, .variable),
      &.imports &.maybe-class-name,
      &.exports &.maybe-class-name {
        color: var(--color-code-attribute);
      }

      &.bold {
        font-weight: var(--font-weight-mono-bold);
      }

      &.italic {
        font-style: italic;
      }
    }
  }

  @media (--size-breakpoint-tablet) {
    .code-block .copy-code-button {
      display: unset;
    }
  }

  /* Language Specific */
  .code-block:is([data-language='css'], [data-language='scss'], [data-language='sass']) .token.selector {
    color: var(--color-code-selector);
  }

  .code-block[data-language='bash'] .token:not(.comment) {
    color: var(--color-code-text) !important;
  }

  .code-preview {
    border: solid 1px var(--color-border-0);
  }

  /* LaTeX formatting */
  .katex {
    white-space: normal !important;
    line-height: 1.3 !important;
    font-size: 1em !important;
  }

  .katex-display {
    margin: 0 !important;

    .katex {
      display: inline-block;
      white-space: nowrap;
      max-width: 100%;
      overflow: auto hidden;
      width: 100%;
    }
  }

  /* Comments */
  #comments {
    --rhythm: 1.75lh;
    padding-top: var(--rhythm);
    border-top: solid 1px var(--color-border-0);
  }

  #comments-placeholder {
    min-block-size: 3.75rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .post-comment-meta > * {
    display: inline;
    vertical-align: middle;
  }

  .post-comment-avatar {
    width: var(--size-spacing-5);
  }

  .post-comment-username {
    font-weight: var(--font-weight-body-bold);
  }

  .post-comment-edited {
    font-style: italic;
  }

  .post-comment-author {
    border-radius: var(--size-spacing--4);
    padding: var(--size-spacing--3) var(--size-spacing--2);
  }

  .post-comment-body ul {
    list-style: disc;
  }

  .post-comment-body :is(h1, h2, h3, h4, h5, h6) {
    font-size: var(--size-font-base);
    line-height: var(--size-leading-base);
  }

  #comments-count {
    color: var(--color-text-soft);
    vertical-align: middle;
    padding-inline-start: 0.25ch;
    font-size: var(--size-font-base);
    line-height: var(--size-leading-base);
  }

  /* YouTube embeds */
  .youtube-embed {
    max-width: 100%;

    & > * {
      height: 100%;
    }

    & button {
      cursor: pointer;
    }
  }

  /* Buttons */
  .button {
    --color-bg-button: transparent;
    --color-fg-button: currentcolor;
    padding: var(--size-spacing--2) var(--size-spacing-0);
    border-radius: var(--size-spacing--4);
    text-decoration: none;
    background-color: var(--color-bg-button);
    color: var(--color-fg-button);
    border: solid;

    &.secondary {
      --color-bg-button: var(--color-surface-0);
      --color-fg-button: var(--color-accent-0);
      border-color: var(--color-fg-button);
    }

    &.secondary:is(:focus-visible, :hover) {
      --color-bg-button: var(--color-accent-1);
      --color-fg-button: var(--color-text-inverted);
      border-color: var(--color-bg-button);
    }

    &.primary {
      --color-bg-button: var(--color-accent-0);
      --color-fg-button: var(--color-text-inverted);
      border-color: var(--color-bg-button);
    }

    &.primary:is(:focus-visible, :hover) {
      --color-bg-button: var(--color-accent-1);
    }
  }

  /* Tables */
  table {
    border-collapse: collapse;
    font-variant-numeric: tabular-nums;
  }

  caption {
    text-align: start;
    margin-bottom: var(--size-spacing--2);
    font-size: var(--size-font-sm);
  }

  th {
    white-space: nowrap;
  }

  :is(td, th) {
    text-align: start;
    padding: var(--size-spacing--1);
    border: solid 0.75px var(--color-border-0);

    &.numeric {
      text-align: end;
    }
  }

  thead {
    background-color: var(--color-surface-1);
  }

  /* Footnotes */
  .footnotes__list {
    list-style: decimal;
    padding-inline-start: var(--size-relative-0);
  }

  [role='doc-noteref']::after {
    counter-increment: footnotes;
    content: ' [' counter(footnotes) ']';
  }

  /* Notes */
  .note-board {
    padding: var(--size-relative-1);
    border: solid var(--size-spacing--1) #e3c19d;
    background-color: #ac8f71;
    box-shadow: inset 0 2px 4px 0 rgb(0 0 0 / 15%);
    position: relative;
  }

  .note {
    --size-shadow-height: 15px;
    color: var(--color-text-normal);
    text-wrap: balance;
    width: 100%;
    height: fit-content;
    transform-style: preserve-3d;
    background: linear-gradient(180deg, #ffc, 90%, #f1f1dd);
    box-shadow: 1px 1px 2px rgb(0 0 0 / 30%);
    position: relative;
    justify-self: center;
    padding: var(--size-relative-2);
    transition-timing-function: var(--transition-timing-function);
    transition-duration: var(--transition-duration);
    transition-property: border-radius;

    & a {
      text-decoration: none;
      outline: none;
    }

    &:is(:hover, :focus-within) {
      border-end-end-radius: 100px var(--size-shadow-height);
    }

    &:has(a:focus-visible) {
      outline: solid var(--size-spacing--3);
    }

    &::after {
      content: '';
      position: absolute;
      inset-inline-start: 0;
      inset-block-end: var(--size-shadow-height);
      transform: translateZ(-1px);
      width: calc(100% - 3px);
      height: 25px;
      background: rgb(0 0 0 / 20%);
      box-shadow: 2px var(--size-shadow-height) 5px rgb(0 0 0 / 40%);
    }
  }

  /* Media carousels */
  carousel-root {
    display: block;
    position: relative;
  }

  carousel-scroll {
    display: block;
    /* Enable horizontal scrolling */
    overflow-x: auto;
    /* Enable horizontal scroll snap */
    scroll-snap-type: x proximity;
    /* Smoothly snap from one focal point to another */
    scroll-behavior: smooth;
  }

  carousel-scroll > * {
    padding: 0 !important;
    list-style: none;
    display: flex;
    gap: var(--size-spacing-0);
  }

  [data-scroll-snap-align='start'] {
    scroll-snap-align: start;
  }

  [data-scroll-snap-align='center'] {
    scroll-snap-align: center;
  }

  [data-scroll-snap-align='end'] {
    scroll-snap-align: end;
  }

  carousel-root [data-scroll-snap-align] {
    margin: 0;
    /* Limit the height of each media item */
    height: 300px;
    /* Prevent media from shrinking */
    flex-shrink: 0;
  }

  carousel-root [data-scroll-snap-align] > *,
  carousel-root [data-scroll-snap-align] :is(figure, picture, img) {
    height: 100%;
  }

  carousel-root [data-scroll-snap-align] img {
    /* Responsive width based on aspect ratio */
    width: auto;
  }

  carousel-root figure {
    position: relative;
  }

  carousel-root figcaption {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    max-width: 100%;
    margin: 0;
    padding: var(--size-spacing--3);
    text-align: center;
    color: white;
    background-color: rgb(0 0 0 / 75%);
    font-size: var(--size-font-xs);
  }

  carousel-root figcaption a {
    --outline-color: currentcolor;
    color: inherit;
    text-decoration-color: currentcolor;
  }

  carousel-navigation button {
    --offset-x: var(--size-spacing--3);
    cursor: pointer;
    /* Anchor the controls relative to the outer wrapper */
    position: absolute;
    /* Center the controls vertically */
    top: 50%;
    padding: var(--size-spacing-0);
    transform: translateY(-50%);
    border-radius: 50%;
    border: solid 1px gray;
    background-color: white;
    color: black;
    box-shadow: 0 0 16px 0 rgb(0 0 0 / 20%);
    line-height: 0;
  }

  carousel-navigation button:focus-visible {
    outline: none;
    box-shadow:
      0 0 0 2px #000,
      0 0 0 4px white;
  }

  /* Don't allow icons to be event targets */
  carousel-navigation button * {
    pointer-events: none;
  }

  carousel-navigation button[data-direction='start'] {
    inset-inline-start: var(--offset-x);
  }

  carousel-navigation button[data-direction='end'] {
    inset-inline-end: var(--offset-x);
  }

  [dir='rtl'] carousel-navigation button[data-direction] {
    transform: translateY(-50%) scale(-1);
  }

  carousel-navigation button[aria-disabled='true'] {
    filter: opacity(0.5);
    cursor: not-allowed;
  }

  carousel-root[mode='slideshow'] carousel-scroll {
    /* Mandatory scroll snap is more consistent for a slideshow */
    scroll-snap-type: x mandatory;
  }

  carousel-root[mode='slideshow'] .carousel-media {
    /* No gap in slideshows */
    gap: 0;
  }

  carousel-root[mode='slideshow'] [data-scroll-snap-align] {
    /* Full-width slides, taller height */
    height: 90vmin;
    width: 100%;
  }

  carousel-root[mode='slideshow'] [data-scroll-snap-align] > *,
  carousel-root[mode='slideshow'] [data-scroll-snap-align] :is(figure, picture, img) {
    /* Cover the full slide */
    width: 100%;
    height: 100%;
  }

  carousel-root[mode='slideshow'] [data-scroll-snap-align] img {
    /* Crop and center overflowing images */
    object-fit: cover;
    object-position: center;
  }
}
